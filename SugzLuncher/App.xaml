<Application x:Class="SugzLuncher.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SugzLuncher"
             xmlns:vm="clr-namespace:SugzLuncher.ViewModels"
             xmlns:views="clr-namespace:SugzLuncher.Views"
             xmlns:controls="clr-namespace:SugzLuncher.Controls"
             StartupUri="Views/MainWindow.xaml">

    <Application.Resources>

        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources\Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <vm:ViewModelLocator x:Key="Locator" />

            <!--  Converters  -->
            <views:InvertableBooleanToVisibilityConverter x:Key="BoolToVisibility" />
            <views:EnumToIntConverter x:Key="EnumToInt" />


            <!--  Ressources  -->
            <SolidColorBrush x:Key="Foreground" Color="#FFE1E1E1" />

            <Storyboard x:Key="ShowHighlightAnimation">
                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                To="#25FFFFFF"
                                Duration="0:0:0.25" />
            </Storyboard>

            <Storyboard x:Key="HideHighlightAnimation">
                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                To="Transparent"
                                Duration="0:0:0.25" />
            </Storyboard>


            <!--  Styles  -->
            <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="AllowDrop" Value="True" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="UseLayoutRounding" Value="True" />
            </Style>

            <Style x:Key="OptionsButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="20" />
                <Setter Property="Height" Value="20" />
                <Setter Property="Margin" Value="0,0,3,0" />
                <Setter Property="Foreground" Value="#FF9B9B9B" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="#FFE1E1E1" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="LuncherButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#3D26A0DA" />
                    </Trigger>
                </Style.Triggers>
            </Style>



            <!--  Data Templates  -->
            <HierarchicalDataTemplate x:Key="LuncherDataTemplate"
                                      DataType="{x:Type vm:LuncherViewModel}"
                                      ItemsSource="{Binding Children}">
                <Button HorizontalContentAlignment="Left"
                        Command="{Binding ExecuteAppCommand}"
                        Style="{StaticResource BaseButtonStyle}">
                    <StackPanel Margin="8"
                                Orientation="Horizontal"
                                SnapsToDevicePixels="true">
                        <Image Width="{Binding Parent.ChildrenIconSize, Converter={StaticResource EnumToInt}}"
                               Height="{Binding Parent.ChildrenIconSize, Converter={StaticResource EnumToInt}}"
                               VerticalAlignment="Center"
                               RenderOptions.BitmapScalingMode="Fant"
                               SnapsToDevicePixels="true"
                               Source="{Binding IconSource}" />
                        <TextBlock Margin="20,0,10,0"
                                   VerticalAlignment="Center"
                                   Foreground="{StaticResource Foreground}"
                                   Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   Visibility="{Binding Parent.ShowChildrenNames, Converter={StaticResource BoolToVisibility}}" />
                    </StackPanel>
                </Button>

            </HierarchicalDataTemplate>

        </ResourceDictionary>



    </Application.Resources>

</Application>
